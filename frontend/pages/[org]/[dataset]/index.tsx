import { GetServerSideProps } from "next";
import Head from "next/head";
import DatasetInfo from "@/components/dataset/individualPage/DatasetInfo";
import DatasetOverview from "@/components/dataset/individualPage/DatasetOverview";
import DatasetNavCrumbs from "@/components/dataset/individualPage/NavCrumbs";
import ResourcesList from "@/components/dataset/individualPage/ResourcesList";
import ActivityStream from "@/components/_shared/ActivityStream";
import Layout from "@/components/_shared/Layout";
import { CKAN } from "@portaljs/ckan";
import styles from "styles/DatasetInfo.module.scss";
import { publicToPrivateDatasetName } from "@/lib/queries/utils";
import { getDataset } from "@/lib/queries/dataset";
import HeroSection from "@/components/_shared/HeroSection";

export const getServerSideProps: GetServerSideProps = async (context) => {
  try {
    const ckan = new CKAN(process.env.NEXT_PUBLIC_CKAN_URL);
    const datasetName = context.params?.dataset as string;
    let dataset = await getDataset({ name: datasetName as string });
    if (!dataset) {
      return {
        notFound: true,
      };
    }
    const activityStream = await ckan.getDatasetActivityStream(dataset.name);
    dataset = {
      ...dataset,
      activity_stream: activityStream,
    };
    return {
      props: {
        dataset,
      },
    };
  } catch (e) {
    console.error(e);
    return {
      notFound: true,
    };
  }
};

//export default function DatasetPage({ dataset }): JSX.Element {
//  const tabs = [
//    {
//      id: "resources",
//      content: (
//        <ResourcesList
//          resources={dataset?.resources}
//          orgName={dataset.organization ? dataset.organization.name : ""}
//          datasetName={dataset.name}
//        />
//      ),
//      title: "Resources",
//    },
//    {
//      id: "information",
//      content: <DatasetOverview dataset={dataset} />,
//      title: "Info",
//    },
//    {
//      id: "activity-stream",
//      content: (
//        <ActivityStream
//          activities={dataset?.activity_stream ? dataset.activity_stream : []}
//        />
//      ),
//      title: "Activity Stream",
//    },
//  ];
//  return (
//    <>
//      <Head>
//        <title>{`${dataset.title || dataset.name} - Dataset`}</title>
//        <meta name="description" content="Generated by create next app" />
//        <link rel="icon" href="/favicon.ico" />
//      </Head>
//      <Layout>
//        <HeroSection title={dataset.title} cols="6" />
//        <DatasetNavCrumbs
//          org={{
//            name: dataset.organization?.name,
//            title: dataset.organization?.title,
//          }}
//          dataset={{
//            name: dataset.name,
//            title: dataset.title ? dataset.title : "This dataset",
//          }}
//        />
//        <div className="grid grid-rows-datasetpage-hero mt-8">
//          <section className="grid row-start-2 row-span-2 col-span-full">
//            <div className="custom-container">
//              {dataset && (
//                <main className={styles.main}>
//                  <DatasetInfo dataset={dataset} />
//                  <div>
//                    <Tabs items={tabs} />
//                  </div>
//                </main>
//              )}
//            </div>
//          </section>
//        </div>
//      </Layout>
//    </>
//  );
//}
import type React from "react";
import { ChevronRight, Clock, RefreshCw, Tag, Download } from "lucide-react";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import Image from "next/image";
import NavBar from "@/components/_shared/NavBar";
import { Footer } from "@/components/_shared/Footer";

export default function DataPortalPage() {
  return (
    <div className="">
      <Head>
        <title>City of Ann Arbor Open Data Portal</title>
        <meta name="description" content="City of Ann Arbor Open Data Portal" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="lg:min-h-screen bg-gradient-to-b from-[#E2F1E4] to-[#FFFFFF] to-65%">
        <NavBar />
        <div className="lg:absolute lg:top-36 lg:left-0 w-full h-[222px] lg:bg-[url('/images/bg-image.png')] bg-contain"></div>
        <div className="lg:pt-36 relative z-10">
          <MainContent />
        </div>
      </div>
      <div className="space-y-2 mt-4">
        <Footer />
      </div>
    </div>
  );
}

function MainContent() {
  return (
    <main className="flex-grow container mx-auto px-4 sm:px-6 lg:px-8 py-8 z-20">
      <div className="flex w-full">
        <div className="w-full bg-white p-6 sm:p-8 rounded-lg shadow-lg">
          <Breadcrumbs />
          <TitleSection />
          <TabsSection />
        </div>
      </div>
    </main>
  );
}

function Breadcrumbs() {
  return (
    <nav className="flex items-center text-sm text-city-purple-DEFAULT mb-4">
      <a href="#" className="hover:underline">
        Home
      </a>
      <ChevronRight size={16} className="mx-1" />
      <a href="#" className="hover:underline">
        Data
      </a>
      <ChevronRight size={16} className="mx-1" />
      <span className="text-city-gray-DEFAULT">
        City Budget Expenditures by Department – FY2024
      </span>
    </nav>
  );
}

function TitleSection() {
  return (
    <div className="mb-6">
      <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between">
        <h1 className="text-3xl font-bold text-city-gray-text mb-2 sm:mb-0">
          City Budget Expenditures by Department – FY2024
        </h1>
        <Badge
          variant="outline"
          className="bg-city-purple-DEFAULT/10 text-city-purple-dark border-city-purple-DEFAULT/30 py-1 px-3 w-fit"
        >
          dashboard
        </Badge>
      </div>
      <p className="text-city-gray-DEFAULT mt-2 mb-4">
        Detailed breakdown of city expenditures by department and program for
        the fiscal year 2024. Includes general fund allocations, capital
        improvements, and grant-funded initiatives.
      </p>
      <div className="flex flex-wrap items-center text-sm text-city-gray-DEFAULT gap-x-4 gap-y-2 mb-4">
        <div className="flex items-center">
          <Clock size={16} className="mr-1" /> Created 25 Mar 2020
        </div>
        <div className="flex items-center">
          <RefreshCw size={16} className="mr-1" /> Updated 22 Mar 2022
        </div>
        <div className="flex items-center">
          <Tag size={16} className="mr-1" /> Tag 1, Tag 2, Tag 3
        </div>
      </div>
      <div className="flex space-x-2">
        <Badge
          variant="secondary"
          className="bg-city-green-light text-city-green-dark hover:bg-city-green-light/80 cursor-pointer py-1 px-3"
        >
          CSV
        </Badge>
        <Badge
          variant="secondary"
          className="bg-city-green-light text-city-green-dark hover:bg-city-green-light/80 cursor-pointer py-1 px-3"
        >
          PDF
        </Badge>
        <Badge
          variant="secondary"
          className="bg-city-green-light text-city-green-dark hover:bg-city-green-light/80 cursor-pointer py-1 px-3"
        >
          XLS
        </Badge>
      </div>
    </div>
  );
}

function TabsSection() {
  return (
    <Tabs defaultValue="overview" className="w-full">
      <TabsList className="grid w-full grid-cols-2 sm:grid-cols-4 bg-city-gray-light p-1 rounded-md mb-0">
        <TabsTrigger
          value="overview"
          className="data-[state=active]:bg-white data-[state=active]:text-city-green-dark data-[state=active]:shadow-sm data-[state=active]:border-b-2 data-[state=active]:border-city-green-dark rounded-none"
        >
          Overview
        </TabsTrigger>
        <TabsTrigger
          value="resources"
          className="data-[state=active]:bg-white data-[state=active]:text-city-green-dark data-[state=active]:shadow-sm data-[state=active]:border-b-2 data-[state=active]:border-city-green-dark rounded-none"
        >
          Resources
        </TabsTrigger>
        <TabsTrigger
          value="activity"
          className="data-[state=active]:bg-white data-[state=active]:text-city-green-dark data-[state=active]:shadow-sm data-[state=active]:border-b-2 data-[state=active]:border-city-green-dark rounded-none"
        >
          Activity Stream
        </TabsTrigger>
        <TabsTrigger
          value="api"
          className="data-[state=active]:bg-white data-[state=active]:text-city-green-dark data-[state=active]:shadow-sm data-[state=active]:border-b-2 data-[state=active]:border-city-green-dark rounded-none"
        >
          API Documentation
        </TabsTrigger>
      </TabsList>
      <TabsContent
        value="overview"
        className="bg-white p-6 border border-t-0 border-city-gray-light rounded-b-md"
      >
        <OverviewContent />
      </TabsContent>
      <TabsContent
        value="resources"
        className="bg-white p-6 border border-t-0 border-city-gray-light rounded-b-md"
      >
        <p className="text-city-gray-text">Resources content goes here.</p>
      </TabsContent>
      <TabsContent
        value="activity"
        className="bg-white p-6 border border-t-0 border-city-gray-light rounded-b-md"
      >
        <p className="text-city-gray-text">
          Activity Stream content goes here.
        </p>
      </TabsContent>
      <TabsContent
        value="api"
        className="bg-white p-6 border border-t-0 border-city-gray-light rounded-b-md"
      >
        <p className="text-city-gray-text">
          API Documentation content goes here.
        </p>
      </TabsContent>
    </Tabs>
  );
}

function OverviewContent() {
  const detailItem = (label: string, value: string | React.ReactNode) => (
    <div className="mb-4">
      <h3 className="text-sm font-semibold text-city-gray-text mb-1">
        {label}
      </h3>
      {typeof value === "string" ? (
        <p className="text-city-gray-DEFAULT text-sm">{value}</p>
      ) : (
        value
      )}
    </div>
  );

  return (
    <div>
      <div className="mb-6">
        <h2 className="text-lg font-semibold text-city-gray-text mb-2">
          Export metadata in
        </h2>
        <div className="flex space-x-4">
          <Button
            variant="link"
            className="text-city-purple-DEFAULT p-0 h-auto hover:underline"
          >
            <Download size={16} className="mr-1" /> RDF
          </Button>
          <Button
            variant="link"
            className="text-city-purple-DEFAULT p-0 h-auto hover:underline"
          >
            <Download size={16} className="mr-1" /> TTL
          </Button>
          <Button
            variant="link"
            className="text-city-purple-DEFAULT p-0 h-auto hover:underline"
          >
            <Download size={16} className="mr-1" /> JSON-LD
          </Button>
        </div>
      </div>

      {detailItem(
        "Stakeholders",
        "At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident."
      )}

      <div className="mb-4">
        <h3 className="text-sm font-semibold text-city-gray-text mb-1">
          Sources
        </h3>
        <ul className="list-disc list-inside text-sm">
          <li>
            <a href="#" className="text-city-purple-DEFAULT hover:underline">
              American Transport Outlook (ATO)
            </a>
          </li>
          <li>
            <a href="#" className="text-city-purple-DEFAULT hover:underline">
              Integrated Database of the American Energy System (JRC-IDEES)
            </a>
          </li>
        </ul>
      </div>

      {detailItem("Last updated date", "23 March, 2023")}
      {detailItem("Version", "1.0")}
      {detailItem("Temporal Coverage", "01 January 1990 - 31 December 2022")}
      {detailItem("Coverage type", "National")}
      {detailItem("Data type", "Count")}
      {detailItem("Visibility", "Public")}
      {detailItem(
        "License",
        <a
          href="#"
          className="text-city-purple-DEFAULT hover:underline text-sm"
        >
          Open Data Commons Attribution License
        </a>
      )}
    </div>
  );
}
